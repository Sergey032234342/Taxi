<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>